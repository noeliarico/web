<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Slides | Noelia Rico</title>
    <link>https://noeliarico.dev/slides/</link>
      <atom:link href="https://noeliarico.dev/slides/index.xml" rel="self" type="application/rss+xml" />
    <description>Slides</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â© 2021 Noelia Rico</copyright><lastBuildDate>Tue, 05 Feb 2019 00:00:00 +0000</lastBuildDate>
    <item>
      <title>Slides</title>
      <link>https://noeliarico.dev/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://noeliarico.dev/slides/example/</guid>
      <description>&lt;h1 id=&#34;create-slides-in-markdown-with-wowchemy&#34;&gt;Create slides in Markdown with Wowchemy&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wowchemy&lt;/a&gt; | &lt;a href=&#34;https://owchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
&lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
Three
&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/media/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/discussions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An efficient computation of Dempster-Shafer theory of evidence based on native GPU implementation ðŸ’»</title>
      <link>https://noeliarico.dev/slides/belief2021/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://noeliarico.dev/slides/belief2021/</guid>
      <description>
&lt;script src=&#34;https://noeliarico.dev/slides/belief2021/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://noeliarico.dev/slides/belief2021/index_files/xaringanExtra-progressBar/progress-bar.js&#34;&gt;&lt;/script&gt;


&lt;div&gt;
&lt;style type=&#34;text/css&#34;&gt;.xaringan-extra-logo {
width: 110px;
height: 128px;
z-index: 0;
background-image: url(logo.png);
background-size: contain;
background-repeat: no-repeat;
position: absolute;
top:1em;right:1em;
}
&lt;/style&gt;
&lt;script&gt;(function () {
  let tries = 0
  function addLogo () {
    if (typeof slideshow === &#39;undefined&#39;) {
      tries += 1
      if (tries &lt; 10) {
        setTimeout(addLogo, 100)
      }
    } else {
      document.querySelectorAll(&#39;.remark-slide-content:not(.title-slide):not(.inverse):not(.hide_logo)&#39;)
        .forEach(function (slide) {
          const logo = document.createElement(&#39;div&#39;)
          logo.classList = &#39;xaringan-extra-logo&#39;
          logo.href = null
          slide.appendChild(logo)
        })
    }
  }
  document.addEventListener(&#39;DOMContentLoaded&#39;, addLogo)
})()&lt;/script&gt;
&lt;/div&gt;
&lt;style&gt;.xe__progress-bar__container {
  bottom:0;
  opacity: 1;
  position:absolute;
  right:0;
  left: 0;
}
.xe__progress-bar {
  height: 0.25em;
  background-color: purple;
  width: calc(var(--slide-current) / var(--slide-total) * 100%);
}
.remark-visible .xe__progress-bar {
  animation: xe__progress-bar__wipe 200ms forwards;
  animation-timing-function: cubic-bezier(.86,0,.07,1);
}
@keyframes xe__progress-bar__wipe {
  0% { width: calc(var(--slide-previous) / var(--slide-total) * 100%); }
  100% { width: calc(var(--slide-current) / var(--slide-total) * 100%); }
}&lt;/style&gt;
&lt;p&gt;background-image: url(&lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/b/be/Sharingan_triple.svg&#34; class=&#34;uri&#34;&gt;https://upload.wikimedia.org/wikipedia/commons/b/be/Sharingan_triple.svg&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;???&lt;/p&gt;
&lt;p&gt;Image credit: &lt;a href=&#34;https://commons.wikimedia.org/wiki/File:Sharingan_triple.svg&#34;&gt;Wikimedia Commons&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;hr /&gt;
&lt;div id=&#34;basic-functions-belief-and-plausibility&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Basic functions: Belief and Plausibility&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Bel(A)=\sum_{S\subseteq A} m(S)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Pl(A)=\sum_{S \cap A \neq \emptyset} m(S)\]&lt;/span&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;basic-funtions-combination&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Basic funtions: combination&lt;/h1&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;algorithm&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Algorithm&lt;/h1&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;available-software&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Available software&lt;/h1&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;10%&#34; /&gt;
&lt;col width=&#34;9%&#34; /&gt;
&lt;col width=&#34;20%&#34; /&gt;
&lt;col width=&#34;59%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Link&lt;/th&gt;
&lt;th&gt;Language&lt;/th&gt;
&lt;th&gt;Author&lt;/th&gt;
&lt;th&gt;Comments&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;TBM&lt;/td&gt;
&lt;td&gt;MATLAB&lt;/td&gt;
&lt;td&gt;Philippe Smets&lt;/td&gt;
&lt;td&gt;TBM, FMT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Software&lt;/td&gt;
&lt;td&gt;R and MATLAB&lt;/td&gt;
&lt;td&gt;Thierry DenÅ“ux&lt;/td&gt;
&lt;td&gt;Clustering, Distance-based Classification, Approximation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;iBelief&lt;/td&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;Kuang Zhou and Arnaud Martin&lt;/td&gt;
&lt;td&gt;Some basic functions to implement belief functions.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Belief Package&lt;/td&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;SÃ©bastien Destercke&lt;/td&gt;
&lt;td&gt;Some basic functions to deal with discrete belief functions.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;pyds&lt;/td&gt;
&lt;td&gt;Python&lt;/td&gt;
&lt;td&gt;Thomas Reineking&lt;/td&gt;
&lt;td&gt;A Python library for performing calculations in the Dempster-Shafer theory of evidence.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;.footnote[[1] &lt;a href=&#34;https://bfasociety.org&#34;&gt;https://bfasociety.org&lt;/a&gt;]&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;new-software-based-on-gpu&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;New software based on GPU&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Compute the functions in parallel&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;why-python&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Why Python?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Google Collab&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;execution-time&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Execution time&lt;/h1&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;usage&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Usage&lt;/h1&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;noelia&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Noelia&lt;/h1&gt;
&lt;p&gt;piece of code in python&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;import numpy as np
import math
a = x + c
math.abs(a)&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;noeliaricouniovi.es&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;ðŸ“¨ &lt;a href=&#34;mailto:noeliarico@uniovi.es&#34; class=&#34;email&#34;&gt;noeliarico@uniovi.es&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;What would you like to see in our package?&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
